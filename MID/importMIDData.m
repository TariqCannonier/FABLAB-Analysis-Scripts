%% Import data from text file.
% Script for importing data from the following text file:
%
%    /Users/tc587/fMRI/ABCD/AWS_Data/MID/MID_Data.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2016/12/05 14:40:53

%% Initialize variables.
filename = '/Users/tc587/fMRI/ABCD/AWS_Data/MID/MID_Data.csv';
delimiter = ',';
startRow = 2;

%% Read columns of data as text:
% For more information, see the TEXTSCAN documentation.
formatSpec = '%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Convert the contents of columns containing numeric text to numbers.
% Replace non-numeric text with NaN.
raw = repmat({''},length(dataArray{1}),length(dataArray)-1);
for col=1:length(dataArray)-1
    raw(1:length(dataArray{col}),col) = dataArray{col};
end
numericData = NaN(size(dataArray{1},1),size(dataArray,2));

for col=[5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94]
    % Converts text in the input cell array to numbers. Replaced non-numeric
    % text with NaN.
    rawData = dataArray{col};
    for row=1:size(rawData, 1);
        % Create a regular expression to detect and remove non-numeric prefixes and
        % suffixes.
        regexstr = '(?<prefix>.*?)(?<numbers>([-]*(\d+[\,]*)+[\.]{0,1}\d*[eEdD]{0,1}[-+]*\d*[i]{0,1})|([-]*(\d+[\,]*)*[\.]{1,1}\d+[eEdD]{0,1}[-+]*\d*[i]{0,1}))(?<suffix>.*)';
        try
            result = regexp(rawData{row}, regexstr, 'names');
            numbers = result.numbers;
            
            % Detected commas in non-thousand locations.
            invalidThousandsSeparator = false;
            if any(numbers==',');
                thousandsRegExp = '^\d+?(\,\d{3})*\.{0,1}\d*$';
                if isempty(regexp(numbers, thousandsRegExp, 'once'));
                    numbers = NaN;
                    invalidThousandsSeparator = true;
                end
            end
            % Convert numeric text to numbers.
            if ~invalidThousandsSeparator;
                numbers = textscan(strrep(numbers, ',', ''), '%f');
                numericData(row, col) = numbers{1};
                raw{row, col} = numbers{1};
            end
        catch me
        end
    end
end


%% Split data into numeric and cell columns.
rawNumericColumns = raw(:, [5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94]);
rawCellColumns = raw(:, [1,2,3,4,7]);


%% Replace non-numeric cells with NaN
R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),rawNumericColumns); % Find non-numeric cells
rawNumericColumns(R) = {NaN}; % Replace non-numeric cells

%% Allocate imported array to column variable names
Site = rawCellColumns(:, 1);
Subject = rawCellColumns(:, 2);
SubjectFileName = rawCellColumns(:, 3);
Notesaboutdata = rawCellColumns(:, 4);
Mismatch = cell2mat(rawNumericColumns(:, 1));
ExperimentName = cell2mat(rawNumericColumns(:, 2));
Version = rawCellColumns(:, 5);
OverallMoney = cell2mat(rawNumericColumns(:, 3));
OverallCombinedRewardHitRate = cell2mat(rawNumericColumns(:, 4));
OverallCombinedRewardMissRate = cell2mat(rawNumericColumns(:, 5));
OverallCombinedRewardMeanRT = cell2mat(rawNumericColumns(:, 6));
OverallCombinedRewardRT_Std = cell2mat(rawNumericColumns(:, 7));
OverallCombinedLossHitRate = cell2mat(rawNumericColumns(:, 8));
OverallCombinedLossMissRate = cell2mat(rawNumericColumns(:, 9));
OverallCombinedLossMeanRT = cell2mat(rawNumericColumns(:, 10));
OverallCombinedLossRT_Std = cell2mat(rawNumericColumns(:, 11));
OverallSmallRewardHitRate = cell2mat(rawNumericColumns(:, 12));
OverallSmallRewardMissRate = cell2mat(rawNumericColumns(:, 13));
OverallSmallRewardMeanRT = cell2mat(rawNumericColumns(:, 14));
OverallSmallRewardRT_Std = cell2mat(rawNumericColumns(:, 15));
OverallLargeRewardHitRate = cell2mat(rawNumericColumns(:, 16));
OverallLargeRewardMissRate = cell2mat(rawNumericColumns(:, 17));
OverallLargeRewardMeanRT = cell2mat(rawNumericColumns(:, 18));
OverallLargeRewardRT_Std = cell2mat(rawNumericColumns(:, 19));
OverallSmallLossHitRate = cell2mat(rawNumericColumns(:, 20));
OverallSmallLossMissRate = cell2mat(rawNumericColumns(:, 21));
OverallSmallLossMeanRT = cell2mat(rawNumericColumns(:, 22));
OverallSmallLossRT_Std = cell2mat(rawNumericColumns(:, 23));
OverallLargeLossHitRate = cell2mat(rawNumericColumns(:, 24));
OverallLargeLossMissRate = cell2mat(rawNumericColumns(:, 25));
OverallLargeLossMeanRT = cell2mat(rawNumericColumns(:, 26));
OverallLargeLossRT_Std = cell2mat(rawNumericColumns(:, 27));
OverallNeutralHitRate = cell2mat(rawNumericColumns(:, 28));
OverallNeutralMissRate = cell2mat(rawNumericColumns(:, 29));
OverallNeutralMeanRT = cell2mat(rawNumericColumns(:, 30));
OverallNeutralRT_Std = cell2mat(rawNumericColumns(:, 31));
run1Money = cell2mat(rawNumericColumns(:, 32));
run1CombinedRewardHitRate = cell2mat(rawNumericColumns(:, 33));
run1CombinedRewardMissRate = cell2mat(rawNumericColumns(:, 34));
run1CombinedRewardMeanRT = cell2mat(rawNumericColumns(:, 35));
run1CombinedRewardRT_Std = cell2mat(rawNumericColumns(:, 36));
run1CombinedLossHitRate = cell2mat(rawNumericColumns(:, 37));
run1CombinedLossMissRate = cell2mat(rawNumericColumns(:, 38));
run1CombinedLossMeanRT = cell2mat(rawNumericColumns(:, 39));
run1CombinedLossRT_Std = cell2mat(rawNumericColumns(:, 40));
run1SmallRewardHitRate = cell2mat(rawNumericColumns(:, 41));
run1SmallRewardMissRate = cell2mat(rawNumericColumns(:, 42));
run1SmallRewardMeanRT = cell2mat(rawNumericColumns(:, 43));
run1SmallRewardRT_Std = cell2mat(rawNumericColumns(:, 44));
run1LargeRewardHitRate = cell2mat(rawNumericColumns(:, 45));
run1LargeRewardMissRate = cell2mat(rawNumericColumns(:, 46));
run1LargeRewardMeanRT = cell2mat(rawNumericColumns(:, 47));
run1LargeRewardRT_Std = cell2mat(rawNumericColumns(:, 48));
run1SmallLossHitRate = cell2mat(rawNumericColumns(:, 49));
run1SmallLossMissRate = cell2mat(rawNumericColumns(:, 50));
run1SmallLossMeanRT = cell2mat(rawNumericColumns(:, 51));
run1SmallLossRT_Std = cell2mat(rawNumericColumns(:, 52));
run1LargeLossHitRate = cell2mat(rawNumericColumns(:, 53));
run1LargeLossMissRate = cell2mat(rawNumericColumns(:, 54));
run1LargeLossMeanRT = cell2mat(rawNumericColumns(:, 55));
run1LargeLossRT_Std = cell2mat(rawNumericColumns(:, 56));
run1NeutralHitRate = cell2mat(rawNumericColumns(:, 57));
run1NeutralMissRate = cell2mat(rawNumericColumns(:, 58));
run1NeutralMeanRT = cell2mat(rawNumericColumns(:, 59));
run1NeutralRT_Std = cell2mat(rawNumericColumns(:, 60));
run2Money = cell2mat(rawNumericColumns(:, 61));
run2CombinedRewardHitRate = cell2mat(rawNumericColumns(:, 62));
run2CombinedRewardMissRate = cell2mat(rawNumericColumns(:, 63));
run2CombinedRewardMeanRT = cell2mat(rawNumericColumns(:, 64));
run2CombinedRewardRT_Std = cell2mat(rawNumericColumns(:, 65));
run2CombinedLossHitRate = cell2mat(rawNumericColumns(:, 66));
run2CombinedLossMissRate = cell2mat(rawNumericColumns(:, 67));
run2CombinedLossMeanRT = cell2mat(rawNumericColumns(:, 68));
run2CombinedLossRT_Std = cell2mat(rawNumericColumns(:, 69));
run2SmallRewardHitRate = cell2mat(rawNumericColumns(:, 70));
run2SmallRewardMissRate = cell2mat(rawNumericColumns(:, 71));
run2SmallRewardMeanRT = cell2mat(rawNumericColumns(:, 72));
run2SmallRewardRT_Std = cell2mat(rawNumericColumns(:, 73));
run2LargeRewardHitRate = cell2mat(rawNumericColumns(:, 74));
run2LargeRewardMissRate = cell2mat(rawNumericColumns(:, 75));
run2LargeRewardMeanRT = cell2mat(rawNumericColumns(:, 76));
run2LargeRewardRT_Std = cell2mat(rawNumericColumns(:, 77));
run2SmallLossHitRate = cell2mat(rawNumericColumns(:, 78));
run2SmallLossMissRate = cell2mat(rawNumericColumns(:, 79));
run2SmallLossMeanRT = cell2mat(rawNumericColumns(:, 80));
run2SmallLossRT_Std = cell2mat(rawNumericColumns(:, 81));
run2LargeLossHitRate = cell2mat(rawNumericColumns(:, 82));
run2LargeLossMissRate = cell2mat(rawNumericColumns(:, 83));
run2LargeLossMeanRT = cell2mat(rawNumericColumns(:, 84));
run2LargeLossRT_Std = cell2mat(rawNumericColumns(:, 85));
run2NeutralHitRate = cell2mat(rawNumericColumns(:, 86));
run2NeutralMissRate = cell2mat(rawNumericColumns(:, 87));
run2NeutralMeanRT = cell2mat(rawNumericColumns(:, 88));
run2NeutralRT_Std = cell2mat(rawNumericColumns(:, 89));


%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans raw col numericData rawData row regexstr result numbers invalidThousandsSeparator thousandsRegExp me rawNumericColumns rawCellColumns R;