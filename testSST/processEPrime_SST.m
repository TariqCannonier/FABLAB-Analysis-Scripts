% Extract timing data from ABCD Stop Signal Task based on the E-Prime
% output converted to tab-delimited text (.txt)
% It should also work with CSV files since I added ',' as another delimiter
% in importfile.m

% Richard Watts, University of Vermont College of Medicine, March 2017
% Calls importfile function, which was autogenerated by Matlab

dataTable = importfile('NDAR_INVF4HCTG43_SST.csv', 3);
runOffset = 0; % Just modifies the output filenames
FSLformat = true; % Adds two extra columns of 1s for duration and value

% All timing is relative to the onset of WaitScreen for each run
indexC = strfind(dataTable.ProcedureSubTrial,'WaitScreen');
waitIndex = find(not(cellfun('isempty', indexC)));

fprintf('Found %d runs\n', length(waitIndex));

for run=1:length(waitIndex)
    
    startIndex=waitIndex(run);
    
    if run==length(waitIndex)
        endIndex=size(dataTable,1);
    else
        endIndex=waitIndex(run+1)-1;
    end
    
    fprintf('Run %d, indices %d to %d\n', run+runOffset,startIndex,endIndex);
    subTable = dataTable(startIndex:endIndex,:);
    startTime = subTable.SiemensPadOnsetTime(1);
    
    fprintf('Start time %d\n', startTime);
    
    indexC = strfind(subTable.ProcedureSubTrial,'VariableStopTrial1');
    stopTrialIndex = find(not(cellfun('isempty', indexC)));
    stopTrialTime = (subTable.StopSignalOnsetTime(stopTrialIndex)-startTime)*0.001;
    
    % Correct Go Trials
    indexC = strfind(subTable.TrialCode,'CorrectGo');
    correctGoIndex = find(not(cellfun('isempty', indexC)));
    correctGoTime = (subTable.GoOnsetTime(correctGoIndex)-startTime)*0.001;
    fprintf('Found %d correct go trials\n', length(correctGoTime));
    if FSLformat
        correctGoTime = [correctGoTime, ones(length(correctGoTime),2)];
    end
    filename = sprintf('run%dcorrectGo.txt', run+runOffset);
    dlmwrite(filename, correctGoTime, 'precision',8,'delimiter','\t');

    % Incorrect Go Trials
    indexC = strfind(subTable.TrialCode,'IncorrectGo');
    incorrectGoIndex = find(not(cellfun('isempty', indexC)));
    incorrectGoTime = (subTable.GoOnsetTime(incorrectGoIndex)-startTime)*0.001;
    fprintf('Found %d incorrect go trials\n', length(incorrectGoTime));
    if FSLformat
        incorrectGoTime = [incorrectGoTime, ones(length(incorrectGoTime),2)];
    end
    filename = sprintf('run%dincorrectGo.txt', run+runOffset);
    dlmwrite(filename, incorrectGoTime, 'precision',8,'delimiter','\t');
    
    % Correct Stop Trials
    indexC = strfind(subTable.TrialCode,'CorrectStop');
    correctStopIndex = find(not(cellfun('isempty', indexC)));
    correctStopTime = (subTable.StopSignalOnsetTime(correctStopIndex)-startTime)*0.001;
    fprintf('Found %d correct stop trials\n', length(correctStopTime));
    if FSLformat
        correctStopTime = [correctStopTime, ones(length(correctStopTime),2)];
    end
    filename = sprintf('run%dcorrectStop.txt', run+runOffset);
    dlmwrite(filename, correctStopTime, 'precision',8,'delimiter','\t');
        
    % Incorrect Stop Trials
    indexC = strfind(subTable.TrialCode,'IncorrectStop');
    incorrectStopIndex = find(not(cellfun('isempty', indexC)));
    incorrectStopTime = (subTable.StopSignalOnsetTime(incorrectStopIndex)-startTime)*0.001;
    fprintf('Found %d incorrect stop trials\n', length(incorrectStopTime));
    if FSLformat
        incorrectStopTime = [incorrectStopTime, ones(length(incorrectStopTime),2)];
    end
    filename = sprintf('run%dincorrectStop.txt', run+runOffset);
    dlmwrite(filename, incorrectStopTime, 'precision',8,'delimiter','\t');
    
    
end